---
import '../../styles/global.css';
import RadialGradient from '../RadialGradient.astro';
import RideGoalCard from './RideGoalCard.astro';

interface Props {
    page: string;
    usualTextStart: string;
    gradientText: string;
    usualTextFinish: string;
    subheading: string;
    text: string;
}

const { page, usualTextStart, gradientText, usualTextFinish, subheading, text } = Astro.props;

let textWidth, sectionHeight, containerHeight;
switch(page) {
    case 'ride':
        textWidth = 'var(--text-width-ride)';
        containerHeight = 'var(--container-height-ride)';
        sectionHeight = 'var(--section-height-ride)';
        break;
    case 'gemohelp':
        textWidth = 'var(--text-width-gemohelp)';
        containerHeight = 'var(--container-height-gemohelp)';
        sectionHeight = 'var(--section-height-gemohelp)';
        break;
}
---
<section class="ride_goals">
    <div class="ride_goals__containers">
        {page === 'gemohelp' && 
            <>
                <RadialGradient topPosition="-9.3125rem" leftPosition="59.6875rem" />
                <RadialGradient topPosition="9.4375rem" leftPosition="-23.375rem" />
            </>
        }
        {page === 'ride' && <RadialGradient topPosition="5.625rem" leftPosition="54.875rem" />}
        {
            page === 'ride' && 
            <div class="ride_goals__cards">
                <RideGoalCard iconName="rideGoal1" cardText="Привлечение новых участников" />
                <RideGoalCard iconName="rideGoal2" cardText="Повышение узнаваемости" />
                <RideGoalCard iconName="rideGoal3" cardText="Информирование масс" />
                <RideGoalCard iconName="rideGoal4" cardText="Повышение мотивации" />
            </div>
        }
        <div class="ride_goals__text">
            <h2>{usualTextStart}<span class="gradient_span">{gradientText}</span>{usualTextFinish}</h2>
            <h3>{subheading}</h3>
            <p>{text}</p>
        </div>
    </div>
</section>

<style define:vars={{sectionHeight, textWidth, containerHeight}}>
    .ride_goals {
        /* Specific page configurations */
        --text-width-ride: 36.8rem;
        --container-height-ride: 40.125rem;
        --section-height-ride: 52.6rem;

        --text-width-gemohelp: 39.8rem;
        --container-height-gemohelp: 24.3rem;
        --section-height-gemohelp: 34.375rem;

        /* General configurations */
        --card-height: 13.625rem;
        --h2-font-size: 3.125rem;
        --h2-width: 63.5rem;
        --h2-line-height: 4rem;
        --h2-margin-bottom: 2.5rem;
        --h3-font-size: 1.5rem;
        --h3-margin-bottom: 1.25rem;
        --p-font-size: 1rem;
        --margin-left: 29.6875rem;
    }

    section {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100vw;
        height: var(--sectionHeight);
    }

    .ride_goals__containers {
        position: relative;
        display: block;
        width: var(--reduced-width);
        height: var(--containerHeight);
    }

    .ride_goals__cards {
        display: flex;
        justify-content: space-between;
        width: inherit;
        height: var(--card-height);
        margin-bottom: var(--h2-margin-bottom);
    }

    .ride_goals__text {
        display: block;
        position: relative;
        width: inherit;
        height: 24rem;
    }

    h2 {
        font-family: var(--font-lulo-bold);
        font-size: var(--h2-font-size);
        width: var(--h2-width);
        line-height: var(--h2-line-height);
        margin-bottom: var(--h2-margin-bottom);
    }

    h3, p {
        display: inline-block;
        font-family: var(--font-inter);
        width: var(--textWidth);
        margin-left: var(--margin-left);
    }

    h3 {
        font-size: var(--h3-font-size);
        margin-bottom: var(--h3-margin-bottom);
    }

    p {
        font-size: var(--p-font-size);
        color: var(--dark-grey);
    }
</style>
